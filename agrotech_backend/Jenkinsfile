	pipeline {
    agent any
    environment {
        AWS_ACCOUNT_ID="411636737021"
        AWS_DEFAULT_REGION="us-east-1" 
        IMAGE_REPO_NAME="sample-nodejs-app"
        IMAGE_TAG="latest"
        REPOSITORY_URI = "411636737021.dkr.ecr.us-east-1.amazonaws.com/sample-nodejs-app"
    }
   
    stages {
        
         stage('Logging into AWS ECR') {
            steps {
                script {
                sh "aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 411636737021.dkr.ecr.us-east-1.amazonaws.com"
                }
                 
            }
        }
        
        stage('Cloning Git') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '', url: 'https://github.com/ArasanKavi/backend.git']]])     
            }
        }
  
    // Building Docker images
    stage('Building image') {
      steps{
        script {
          dockerImage = docker.build "sample-nodejs-app:latest"
        }
      }
    }
   
    // Uploading Docker images into AWS ECR
    stage('Pushing to ECR') {
     steps{  
         script {
                sh "docker tag sample-nodejs-app:latest 411636737021.dkr.ecr.us-east-1.amazonaws.com/sample-nodejs-app:latest"
                sh "docker push 411636737021.dkr.ecr.us-east-1.amazonaws.com/sample-nodejs-app:latest"
                sh "docker run -itd -p 2172:2172 411636737021.dkr.ecr.us-east-1.amazonaws.com/sample-nodejs-app:latest"
         }
        }
      }
    }
}
